Gfarm FAQ - Frequently Asked Questions about Gfarm

Copyright (c) 2003-2006 National Institute of Advanced Industrial
Science and Technology (AIST).  All Rights Reserved.

Table of Contents:
******************

1. General
  1.1 What is Gfarm?
  1.2 Where can I download Gfarm?

2. Trouble Shooting
  2.1 'gfls' results in 'gfarm:.: no such object'.
  2.2 We cannot connect to file system nodes and/or a metadata server.
  2.3 [GSI authentication] "Authentication error" or "no filesystem
     node" error happens when executing programs or replicating files.
  2.4 It is not possible to access files that should be created.
  2.5 Unregistered or unnecessary files seem to remain in a spool
     directory on filesystem nodes.  How do I delete these
     unregistered files?
  2.6 Due to disk crash, files in a file system node are lost.  What
     we need to do?
  2.7 "Operation not permitted" error happens when accessing or
     creating a file having execution bits.
  2.8 Sometimes some gfarm client or gfsd stops without doing anything.

3. Security
  3.1 It is safe to use Gfarm in the environment which is NOT protected by
    a firewall?
  3.2 What is the difference in sharedsecret authentication,
    gsi_auth method and gsi authentication?

4. Performance Tuning
  4.1 How to speed up reads and writes to metadata database using an
    OpenLDAP server?

5. Limitation
  5.1 Where are gfchown and gfmv?
  5.2 Can I open a file with read-write mode?
  5.3 Are file names case-sensitive in a Gfarm file system?
  5.4 Can a file name include ',' or '+'?

1. General
**********
  1.1 What is Gfarm?

	Please refer to the following URL:

		http://datafarm.apgrid.org/

  1.2 Where can I download Gfarm?

	It is delivered from the following URL:

		http://datafarm.apgrid.org/software/

2. Trouble Shooting
*******************
  2.1 'gfls' results in 'gfarm:.: no such object'.

	The error message indicates there is no current working
	directory.  When you start using a Gfarm file system without
	creating your home directory, you always encounter this error
	message.  In this case, it is necessary to create a home
	directory.

		$ gfmkdir gfarm:~

  2.2 We cannot connect to file system nodes and/or a metadata server.

	By default setting, 600/tcp and 600/udp need to be opened for
	file system nodes, and 601/tcp and 602/tcp need to be opened
	for a metadata server.

	When 'gfhost -lv' reports 'x.xx/x.xx/x.xx', these file system
	nodes cannot be connected by the client using 600/udp.

	The port number can be specified by a Gfarm configuration file
	or a command-line option for gfsd and gfmd.  For details,
	refer to the installation manual and manual pages of gfsd(8),
	gfmd(8) and gfarm.conf(5).

  2.3 [GSI authentication] "Authentication error" or "no filesystem
     node" error happens when executing programs or replicating files.

	Verbose error messages are displayed with the -v option of
	'gfrcmd', which help to find the reason for the authentication
	error.  Although detailed descriptions are available at
	http://www.globus.org, here are typical cases for the error:

	(1) Is a valid entry included in the grid-mapfile on file
	system nodes and file system metadata node?

	Note that the subject names displayed for certain certificates
	changed between Globus Toolkit version 2 (GT2) and the version
	3 (GT3).  'Email' field in GT2 becomes 'emailAddress' in GT3.
	'USERID' field in GT2 becomes 'UID' in GT3.  For
	compatibility, you need to register both entries in
	grid-mapfile.

	(2) Are permissions of user certificate
	 (~/.globus/usercert.pem) and/or host certificate
	 (/etc/grid-security/hostcert.pem) not permissive?  Maximum
	 allowable permissions are 644.

	(3) Are both user certificate and host certificates valid, and
	not expired?

	(4) Is a valid certificate for the CAs that sign user or host
	certificate, registered in /etc/grid-security/certificates?
	Is not it expired?

	Note that CA subject name in signing_policy files is also
	affected the same as (1).  If you would like to use the same
	signing_policy file for GT2 and GT3, you need both entries in
	a signing_policy file.

	(5) Are the clocks of all file system nodes, file system
	metadata node, and a client are synchronized?  The GSI library
	provided by the Globus fails to authenticate each other when
	the time difference is more than five minutes.

  2.4 It is not possible to access files that should be created.

	Files that are not closed by a creating process are not
	registered correctly to metadata since the file close
	operation in Gfarm I/O library cannot be called.

	Such files are displayed as "no fragment information" by 'gfls
	-l', and 'gfwhere'.  To register them, 'gfsplck' command can
	be used.  When gfarm:file needs to be registered, execute

		$ gfhost | gfrun -H - gfsplck gfarm:file

  2.5 Unregistered or unnecessary files seem to remain in a spool
     directory on filesystem nodes.  How do I delete these
     unregistered files?

	When a parallel process is interrupted during file creation,
	or when a filesystem node is unavailable during removal of a
	file, unnecessary files may remain in a spool directory on
	filesystem nodes.

	'gfsplck' is prepared for checking and deleting these
	unregistered files in a spool directory on filesystem nodes.
	You can check which files are unregistered or not by

		$ gfhost | gfrun -H - gfsplck gfarm:~

	After checking files, you can delete them by

		$ gfhost | gfrun -H - gfsplck -d gfarm:~

	The above command examples do not check the file integrity.
	When you want to check it by calculating md5 checksum, execute
	with the -a option.

		$ gfhost | gfrun -H - gfsplck -ad gfarm:~

  2.6 Due to disk crash, all files in a file system node are lost.
     What we need to do?

	For all data files including execution programs, there is
	nothing you need to do when there is at least one file copy.
	When opening these missing files, the Gfarm system detects
	that, and opens another file replica automatically, or
	replicates it dynamically.

	Since invalid metadata of lost file replicas remain in a
	metadata database, it is necessary to delete these metadata.
	When a crashed file system node is gfm01.aist.go.jp, run

		$ gfrm -h gfm01.aist.go.jp -r gfarm:/

  2.7 "Operation not permitted" error happens when accessing or
     creating a file having execution bits.
	
	Gfarm file system can store multiple binaries in the same
	pathname to make it possible to execute the corresponding
	binary for each different architecture.  For this
	functionality, it is necessary to determine the architecture
	name to access files that has execution bits.

	When the client host is a file system node, the architecture
	is automatically determined by the Gfarm metadata database.
	On the other hand, when the registered hostname and the output
	of hostname command are different, the output of hostname
	command needs to be registered as a hostname alias.  The
	following example shows to register a hostname alias 'host'
	to the host 'host.example.com';

		$ gfhost -m host.example.com host

	Otherwise, you need to specify the client architecture
	explicitly to access files that has execution bits by either
	the 'client_architecture' directive in the configuration file
	or the environment variable GFARM_ARCHITECTURE.

		$ export GFARM_ARCHITECTURE=`gfarm.arch.guess`

  2.8 Sometimes some gfarm client or gfsd stops without doing anything.

	If your network interface card or your network itself has a
	trouble more than few minutes, such symptom may happen.
	Such possibility increases especially if you are using a wide
	area network for communcation between a gfarm client and a server.
	Such stopped gfarm client or gfsd is able to exit automatically
	with an error, if you add "sockopt keepalive" setting to your
	gfarm.conf. The config-gfarm command generates such setting
	by default since gfarm 1.3.1.

3. Security
***********
  3.1 It is safe to use Gfarm in the environment which is NOT protected by
    a firewall?

	Currently, there are four problems.

	First problem is that gfarm_agent doesn't perform authentication
	for now. When you are using gfarm_agent, all metadata information,
	that is host information, filenames, owners of files and location
	of files, are all read and written via gfarm_agent. And because
	these operations are done without authentication, it's entirely
	insecure.
	Due to this problem, we strongly recommend to use gfarm_agent
	only within a firewall.
	If you really have to use gfarm_agent outside of a firewall,
	you should use IPsec to protect the port of gfarm_agent.
	Or perhaps, it might be possible to use packet filtering (e.g.
	iptable on Linux) to permit access to the port of gfarm_agent
	only from trusted hosts. But attacks like packet sniffering and
	TCP session hijacking cannot be avoided by packet filtering.
	You can use gfarm without gfarm_agent, but performance about
	metadata access decreases in that cases.

	Second problem is about the access right to PostgreSQL server
	or LDAP server, which stores the metadata information mentioned
	above.
	Currently, the default configuration, which is automatically
	generated by the config-gfarm command, uses a secret key which
	is shared by all gfarm users. Thus, any user who have read access
	to gfarm.conf file can read and write all metadata information.
	Although it is possible to configure gfarm to use per-user secret
	key, such configuration isn't supported by the config-gfarm
	command.
	Also, even if per-user secret key is used, any user who have access
	to metadata information can read and write all metadata information
	about files and directories.
	SSL isn't supported for the connection to the LDAP server, thus,
	the risk of packet sniffering and TCP session hijacking exists.
	SSL is supported for the connection to the PostgreSQL server,
	but you must edit configuration files manually to use it. i.e.
	The default configuration, which is automatically generated by
	the config-gfarm command, has the risk of packet sniffering and
	TCP session hijacking.

	Third problem is file/directory ownership and mode on
	creating replica. If replication is done by the owner of
	the file or directory, there isn't any problem. But if
	replication is done by different user from its owner,
	the ownership of the replica is set to the user who did
	the replication instead of the original owner. And also
	the mode of the file/directory isn't maintained in that
	case, it becomes group/other writable, if replication is
	done by different user from its owner.

	We plan to fix above problems in the next major release.

	Fourth problem is the way of authentication.
	Gfarm-1.x supports three authentication methods, namely
	the sharedsecret authentication, gsi_auth method
	and the gsi authentication.
	The sharedsecret authentication and gsi_auth method are
	not safe enough in the Internet environment.
	Please refer to the next question about this issue.

  3.2 What is the difference in sharedsecret authentication,
    gsi_auth method and gsi authentication?

	The "sharedsecret" authentication in Gfarm is an authentication
	based on a shared key, which provides only authentication
	service not data signing and data encryption services. Thus,
	this method still has risks of packet sniffering and TCP
	session hijacking.
	Due to this reason, we recommend to use the sharedsecret
	authentication only in a safe environment protected by a
	firewall.  The reason why we provide this authentication
	method is that it is fast and it does not need you to acquire
	a public key.

	The "gsi" (Grid Security Infrastructure) authentication is an
	authentication based on a public key infrastructure.  Gfarm uses
	the Globus GSI library for this authentication.  Because the
	Globus GSI library supports data encryption, the gsi
	authentication is considered more secure than the sharedsecret
	authentication in Gfarm.  But please note that some exportable
	versions of Globus don't support encryption.  We recommend you
	to confirm that your Globus version certainly supports
	encryption.

	The "gsi_auth" method uses the GSI library only for
	the authentication. And actual data communication is not protected
	by data signing and data encryption services with this method.
	Thus, this gsi_auth method has risks of packet sniffering and
	TCP session hijacking just like sharedsecret authentication.  
	Due to this reason, we recommend to use the gsi_auth method
	only in a safe environment protected by a firewall.
	The reason why we provide this method is that it is fast
	for data transfer.

	The gsi authentication and gsi_auth method are only
	available, when you use the --with-globus option at the source
	code "configure" time.
	Please look at the following URL about the GSI:
		http://www.globus.org/

4. Performance Tuning
*********************
  4.1 How to speed up reads and writes to metadata database using an
    OpenLDAP server?

	When you are using Berkeley DB as database backend, it is
	possible to improve write performance significantly to tune
	cache size and not to synchronously flush the log on
	transaction commit.  These are specified in the
	/var/gfarm-ldap/DB_CONFIG.  In the following configuration
	example, the size of the cache is specified as 512 MB.  It is
	necessary to restart slapd after the modification of the
	configuration file.

----------------------------- BEGIN HERE -----------------------------
set_cachesize 0 536870912 2
set_flags DB_TXN_NOSYNC
-------------------------------- END --------------------------------

	When you are using LDBM database backend, it is possible to
	improve the performance by increasing the size of in-memory
	cache.  The size of entries and the size in bytes of the
	in-memory cache can be specified by 'cachesize' and
	'dbcachesize', respectively, in slapd.conf.  The following
	setting example sets both parameters 10 times larger than the
	default.

----------------------------- BEGIN HERE -----------------------------
cachesize 10000
dbcachesize 1000000
-------------------------------- END --------------------------------

5. Limitation
*************
  5.1 Where are gfchown and gfmv?

	Unfortunately, not implemented yet.  Instead, you can use
	mv commands by using syscall-hooking library.  Please read
	README.hook.en for detail.

	We plan to add these commands in the next major release.

  5.2 Can I open a file in read-write mode?

	Since the version 1.0.4, a file can be opened in read-write
	mode.  When there are several replicas of the file, every
	other replicas except the updated one will be automatically
	deleted.

  5.3 Are file names case-sensitive in a Gfarm file system?

	If you are using the latest version of openldap 2.1 series or
	2.2 series, file names are case-sensitive.  But if you are
	using old version like openldap 2.0 series, Gfarm cannot
	distinguish upper case and lower case for file names.

  5.4 Can a file name include ',' or '+'?

	Gfarm version 1.0.2 or later can include '#', ' ', ',', '+',
	'"', '\', '>', '<', and ';' in a file name.
