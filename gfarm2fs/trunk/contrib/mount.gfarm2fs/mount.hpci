#!/bin/sh
#
# mount.hpci - mount HPCI shared storage
#
# usage: mount.hpci [ -r | --root | -h | --home | -g | --group ]
#
# this command assumes to be executed by a normal user not root

PROG=`basename $0`

ABORT() {
	[ $# -gt 0 ] && echo >&2 $PROG: $*
	exit 1
}

ASK() {
	echo >&2 $PROG: $*
	echo >&2 $PROG: Please ask the system administrator.
	exit 1
}

USAGE() {
	echo >&2 "usage: $PROG [ -r | --root | -h | --home | -g | --group ]"
	exit 1
}

create_link()
{
    G=$1
    U=$2
    [ -h www ] ||
	(gfln -s gfarm:///www/$G/$U www && echo create \'www\' symlink)
    [ -h samba ] ||
	(gfln -s gfarm:///samba/$G/$U samba && echo create \'samba\' symlink)
    [ -h shared ] ||
	(gfln -s gfarm:///home/$G/shared shared && echo create \'shared\' symlink)
}

# check proxy cert
grid-proxy-info > /dev/null || ABORT "Invalid proxy certificate"

# check privilege to use FUSE
[ -w /dev/fuse ] || ASK "Cannot access /dev/fuse."

# display timeleft of proxy cert
(grid-proxy-info || ABORT "Invalid proxy certificate") | grep timeleft

GFUSER=`gfwhoami`
[ X"$GFUSER" = X ] && ABORT 'Who?'
: ${USER:=`whoami`}
USERLIST="$GFUSER"
[ X"$GFUSER" != X"$USER" ] && USERLIST="$USERLIST $USER"

: ${GFARM_CONFIG_FILE:=`gfstatus 2>/dev/null | grep "user config file" | sed 's/user config file  : //'`}
: ${GFARM_CONFIG_FILE:="$HOME/.gfarm2rc"}

groups=`gfgroup -l | grep $GFUSER | awk -F: '{print $1}'`
if [ -z "$groups" ]; then
    ASK "The Gfarm user '$GFUSER' doesn't belong to any Gfarm resource group."
fi

# option
mount_dir=user
while [ $# -gt 0 ]
do
	case $1 in
	-r|--root)
		mount_dir=root
		;;
	-h|--home)
		mount_dir=home
		;;
	-g|--group)
		mount_dir=group
		;;
	*)
		USAGE
		;;
	esac
	shift
done

for g in $groups
do
    dir_not_exist=true
    dir_not_writable=true
    cannot_mount=true
    not_writable_dir=XXX
    not_mountable_dir=XXX
    for u in $USERLIST
    do
        if [ -d /gfarm/$g/$u ]; then
	    dir_not_exist=false
	    if [ ! -w /gfarm/$g/$u ]; then
		not_writable_dir=/gfarm/$g/$u
	    else
		dir_not_writable=false
		case $mount_dir in
		root) GFARMFS_ROOT=/ ;;
		home) GFARMFS_ROOT=/home ;;
		group) GFARMFS_ROOT=/home/$g ;;
		user) GFARMFS_ROOT=/home/$g/$GFUSER ;;
		esac
		if env GFARMFS_ROOT=$GFARMFS_ROOT mount.gfarm2fs "$GFARM_CONFIG_FILE" /gfarm/$g/$u
		then
		    cannot_mount=false
		    # create symlinks
		    if [ $mount_dir = "user" ]; then
			    (cd /gfarm/$g/$u && create_link $g $GFUSER)
		    fi
		else
		    not_mountable_dir=/gfarm/$g/$u
		fi
	    fi
	fi
    done
    if $cannot_mount; then
	if $dir_not_exist; then
	    ASK "Your mount directory is not found/accessible in '/gfarm/$g'."
	elif $dir_not_writable; then
	    ASK "Your mount directory '$not_writable_dir' is not writable'."
	else
	    ABORT "failed to mount on $not_mountable_dir."
	fi
    fi
done
